name: Deploy Project
# on: [push, pull_request]
on: [push, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18 # Specify the Node.js version you want to use

      - name: Install dependencies
        run: npm ci # Clean install, faster and more reliable for automated builds

      - name: Run tests
        run: npm run test
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' # Only deploy on main branch
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18 # Specify the Node.js version you want to use
      - name: Install dependencies
        run: npm ci # Clean install, faster and more reliable for automated builds
      - name: Build project
        run: npm run build # Assuming you have a build script in your package.json
      - name: Deploy to production
        run: |
          echo "Deploying to production server..."
          # Add your deployment commands here, e.g., scp, rsync, or any deployment tool
          # Example: scp -r ./dist
          # to your production server
          # Make sure to set up SSH keys or any necessary authentication for deployment
        env:
          NODE_ENV: production # Set environment variable for production
      - name: Notify deployment success
        run: |
          echo "Deployment successful!"
          # You can add a notification step here, e.g., sending a message to Slack or
          # updating a status page
        # env:
        #   SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # Make sure to set up the SLACK_WEBHOOK_URL secret in your repository settings
        # to avoid exposing sensitive information in your workflow file
      - name: Cleanup
        run: |
          echo "Cleaning up temporary files..."
          # Add any cleanup commands if necessary, e.g., removing temporary files or directories
          # Example: rm -rf ./temp
